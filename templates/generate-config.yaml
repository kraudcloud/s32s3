{{- $sec := lookup "v1" "Secret" .Release.Namespace (printf "%s-config" .Release.Name) -}}
{{/*Run only if secret is not created*/}}
{{- if not $sec }}
apiVersion: batch/v1
kind: Job
metadata:
  # The reason we use a job to generate the config is that rclone stores its passwords in a weird way in the config file.
  # It's impossible to replicate with helm, so we have to use a job to generate the config file.
  name: {{.Release.Name }}-init-config
  namespace: {{.Release.Namespace }}
  labels: {{ include "s32s3.labels" . | nindent 4 }}
spec:
  template:
    spec:
      imagePullSecrets: {{ toYaml .Values.imagePullSecrets | nindent 8 }}
      serviceAccountName: {{ .Release.Name }}
      securityContext: {{ toYaml .Values.podSecurityContext | nindent 8 }}
      nodeSelector: {{ toYaml .Values.nodeSelector | nindent 8 }}
      tolerations: {{ toYaml .Values.tolerations | nindent 8 }}
      affinity: {{ toYaml .Values.affinity | nindent 8 }}
      restartPolicy: Never
      containers:
        - name: {{.Release.Name }}-init-config
          image: "{{ .Values.image.repository }}{{if .Values.image.tag}}:{{.Values.image.tag }}{{end}}"
          resources: {{ toYaml .Values.resources | nindent 12 }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              rclone config touch

              rclone config create --non-interactive source s3 \
                provider={{.Values.source.provider }} \
                access_key_id={{.Values.source.accessKeyId }} \
                secret_access_key=$SOURCE_ACCESS_KEY \
                endpoint={{.Values.source.endpoint }} \
                {{- if.Values.source.region }} region={{.Values.source.region }} \{{- end }}
                {{- if.Values.source.acl }} acl={{.Values.source.acl }} \{{- end }}
                {{- if.Values.source.bucketAcl }} bucket_acl={{.Values.source.bucketAcl }} \{{- end }}
               
              rclone config create --non-interactive backup s3 \
                provider={{.Values.destination.provider }} \
                access_key_id={{.Values.destination.accessKeyId }} \
                secret_access_key=$DESTINATION_ACCESS_KEY \
                endpoint={{.Values.destination.endpoint }} \
                {{- if.Values.source.region }} region={{.Values.source.region }} \{{- end }}
                {{- if.Values.source.acl }} acl={{.Values.source.acl }} \{{- end }}
                {{- if.Values.source.bucketAcl }} bucket_acl={{.Values.source.bucketAcl }} \{{- end }}

              rclone config create --non-interactive dest crypt \
                remote="backup:" \
                directory_name_encryption=false \
                password=$(rclone obscure $RCLONE_CRYPT_PASSWORD) \
                password2=$(rclone obscure $RCLONE_CRYPT_PASSWORD2) \

              curl -s -X POST -d "{
                \"apiVersion\": \"v1\",
                \"kind\": \"Secret\",
                \"metadata\": {
                  \"name\": \"{{.Release.Name }}-config\"
                },
                \"data\": {
                  \"rclone.conf\": \"$(cat /config/rclone/rclone.conf | base64 -w 0)\"
                }
              }" \
              -H "Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" \
              -H "Content-Type: application/json" \
              -o /dev/null \
              -k https://kubernetes.default/api/v1/namespaces/{{ .Release.Namespace }}/secrets
          env:
            - name: SOURCE_ACCESS_KEY
              {{- .Values.source.secretAccessKey | toYaml | nindent 14}}
            - name: DESTINATION_ACCESS_KEY
              {{- .Values.destination.secretAccessKey | toYaml | nindent 14}}
            - name: RCLONE_CRYPT_PASSWORD
              {{if .Values.crypt.password }}
              {{- .Values.crypt.password | toYaml | nindent 14}}
              {{- else }}
              value: {{ randAlphaNum 64 | quote}}
              {{- end }}
            - name: RCLONE_CRYPT_PASSWORD2
              {{if .Values.crypt.password2 }}
              {{- .Values.crypt.password2 | toYaml | nindent 14}}
              {{- else }}
              value: {{ randAlphaNum 64 | quote}}
              {{- end }}
{{- end }}